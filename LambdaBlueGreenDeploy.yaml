trigger:
- dev

pool:
  name: Default

parameters:
- name: DEPLOY_DEV
  displayName: 'Deploy to Dev? (YES/NO)'
  type: string
  default: 'NO'
  values:
  - NO
  - YES
- name: DEV_CLIENT_NAME
  displayName: 'DEV Client Name'
  type: string
  default: 'dev'
  values:
  - dev
  - demo1
  - demo2
  - All

stages:
- stage: Build
  displayName: 'Build'
  jobs:
  - job: Build
    displayName: 'Building the code'
    steps:
    - checkout: self  
    - script: |
        sudo apt-get update
        sudo apt-get install zip -y
        pwd
        pip install -r requirements.txt
        zip -r $(System.DefaultWorkingDirectory)/dev_lambda_function.zip .
      displayName: 'Build and create zip file'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: lambda-zip'
      inputs:
        PathtoPublish: '$(System.DefaultWorkingDirectory)/dev_lambda_function.zip'
        ArtifactName: 'lambda-zip'

- stage: Deploy_to_DEV
  displayName: 'Deploy to DEV'
  dependsOn: Build
  condition: and(eq('${{ parameters.DEPLOY_DEV }}', 'YES'), ne('${{ parameters.DEV_CLIENT_NAME }}', 'All'))
  jobs:
  - job: Deploy_to_DEV
    displayName: 'Deploying in DEV'
    steps:
    - checkout: none  

    - task: DownloadBuildArtifacts@0
      displayName: 'Download Build Artifacts'
      inputs:
        artifactName: 'lambda-zip'
        downloadPath: '$(System.DefaultWorkingDirectory)/Artifacts'

    - script: |
        aws s3 cp $(System.DefaultWorkingDirectory)/dev_lambda_function.zip s3://darin-pop-bucket/devcode/
      displayName: 'Push code to S3 bucket'
    - script: |
        aws lambda update-function-code --function-name ${{ parameters.DEV_CLIENT_NAME }}_lambda_function --s3-bucket darin-pop-bucket --s3-key devcode/dev_lambda_function.zip --region ap-south-1
      displayName: 'Copy code from S3 to Lambda function'

- stage: Deploy_to_ALL_DEV
  displayName: 'Deploying to all DEV'
  condition: and(eq('${{ parameters.DEPLOY_DEV }}', 'YES'), eq('${{ parameters.DEV_CLIENT_NAME }}', 'All'))
  dependsOn: Build
  jobs:
  - job: Deploy_to_ALL_DEV
    displayName: 'Deploying to all DEV'
    steps:
    - checkout: none
    - task: DownloadBuildArtifacts@0
      displayName: 'Download Build Artifacts'
      inputs:
        artifactName: 'lambda-zip'
        downloadPath: '$(System.DefaultWorkingDirectory)/Artifacts'

    - script: |
        aws s3 cp $(System.DefaultWorkingDirectory)/dev_lambda_function.zip s3://darin-pop-bucket/devcode/
        function_names=$(aws lambda list-functions --query 'Functions[*].FunctionName' --output text)
        for function_name in $function_names; do
          echo "Updating code for Lambda function: $function_name"
          aws lambda update-function-code --function-name $function_name --s3-bucket darin-pop-bucket --s3-key devcode/dev_lambda_function.zip --region ap-south-1
        done
      displayName: 'Deploy to all DEV'
